package ru.vad1mchk.progr.lab05.client.datatypes

import ru.vad1mchk.progr.lab05.client.util.AutoGenerated
import ru.vad1mchk.progr.lab05.client.util.DataField
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.util.*

/**
 * A space marine (O Shikarniy Sup Navarili O Velikiy Sup Navarili)
 */
class SpaceMarine : Comparable<SpaceMarine> {
    /**
     * Unique ID of the space marine.
     * Should be >= 0.
     * Should be unique.
     * Is generated automatically
     */
    @DataField
    @AutoGenerated
    var id: Int

    /**
     * Name of the space marine.
     * Should not be null
     */
    @DataField
    val name: String

    /**
     * Coordinates of the space marine.
     * Should not be null
     */
    @DataField
    val coordinates: Coordinates

    /**
     * Date of creation of the space marine.
     * Should not be null.
     * Is generated automatically
     */
    @DataField
    @AutoGenerated
    private val creationDate: LocalDate

    /**
     * Health points of the space marine.
     * Should be > 0.
     * Should not be null
     */
    @DataField
    val health: Double

    /**
     * Heart count of the space marine.
     * Should be 0 < heartCount <= 3
     */
    @DataField
    var heartCount: Long

    /**
     * If the space marine is loyal
     */
    @DataField
    var isLoyal: Boolean

    /**
     * A weapon currently equipped by the space marine
     */
    @DataField
    var meleeWeapon: MeleeWeapon?

    /**
     * A chapter in which the space marine appears
     */
    @DataField
    var chapter: Chapter?

    constructor(
        id: Int,
        name: String,
        coordinates: Coordinates,
        creationDate: LocalDate = LocalDate.now(),
        health: Double,
        heartCount: Long,
        isLoyal: Boolean,
        meleeWeapon: MeleeWeapon?,
        chapter: Chapter?
    ) {
        this.id = id
        this.name = name
        this.coordinates = coordinates
        this.creationDate = creationDate
        this.health = health
        this.heartCount = heartCount
        this.isLoyal = isLoyal
        this.meleeWeapon = meleeWeapon
        this.chapter = chapter
    }

    override fun compareTo(other: SpaceMarine): Int {
        return java.lang.String.CASE_INSENSITIVE_ORDER.compare(name, other.name)
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val that = o as SpaceMarine
        return (id == that.id && heartCount == that.heartCount && isLoyal == that.isLoyal && name == that.name && coordinates!!.equals(
            that.coordinates
        )
                && creationDate == that.creationDate && health == that.health && meleeWeapon == that.meleeWeapon
                && chapter == that.chapter)
    }

    override fun hashCode(): Int {
        return Objects.hash(id, name, coordinates, creationDate, health, heartCount, isLoyal, meleeWeapon, chapter)
    }

    override fun toString(): String {
        return ("SpaceMarine {"
                + "id=" + id
                + ", name='" + name + '\''
                + ", coordinates=" + coordinates
                + ", creationDate=" + creationDate.format(DateTimeFormatter.ofPattern("dd.MM.yyyy"))
                + ", health=" + health
                + ", heartCount=" + heartCount
                + ", loyal=" + isLoyal
                + ", meleeWeapon=" + meleeWeapon
                + ", chapter=" + chapter + '}')
    }
}