package ru.vad1mchk.progr.lab05.client.datatypes

import ru.vad1mchk.progr.lab05.client.exceptions.ValidationException
import ru.vad1mchk.progr.lab05.client.util.AutoGenerated
import java.time.LocalDate

data class SpaceMarine(
    @AutoGenerated val id: Int,
    val name: String,
    val coordinates: Coordinates,
    @AutoGenerated val creationDate: LocalDate,
    val health: Double,
    val heartCount: Long?,
    val loyal: Boolean,
    val meleeWeapon: MeleeWeapon?,
    val chapter: Chapter?
) : Validated {
    companion object {
        val STRICT_MIN_ID = 0
        val STRICT_MIN_HEALTH = 0.0
        val STRICT_MIN_HEART_COUNT = 0L
        val MAX_HEART_COUNT = 3L
    }

    init {
        validate()
    }

    override fun validate() {
        if (id <= STRICT_MIN_ID) throw ValidationException("id should be greater than $STRICT_MIN_ID")
        if (health <= STRICT_MIN_HEALTH) throw ValidationException("health should be greater than $STRICT_MIN_HEALTH")
        if (heartCount !in (STRICT_MIN_HEART_COUNT + 1..MAX_HEART_COUNT))
            throw ValidationException("heart count should be in range ($STRICT_MIN_HEART_COUNT; $MAX_HEART_COUNT]")
    }

}
